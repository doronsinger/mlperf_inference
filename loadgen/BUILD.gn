# These can be overriden in the .gn file or via the "gn gen" command line.
declare_args() {
  py_include_dirs = [ "/usr/include/x86_64-linux-gnu/python2.7",
                      "/usr/include/python2.7" ]
  py_ld_flags = [ "-lpython2.7" ]
}

public_headers = [
  "loadgen.h",
  "query_sample.h",
  "query_sample_library.h",
  "system_under_test.h",
]

lib_sources = [
  "loadgen.cc",
  "logging.cc",
  "logging.h",
  "trace_generator.h",
]

c_api_sources = [
  "bindings/c_api.h",
  "bindings/c_api.cc",
]

source_set("docs") {
  sources = [ "README.md" ]
}

static_library("mlperf_loadgen") {
  sources = public_headers + lib_sources + c_api_sources
  include_dirs = [ "." ]
}

executable("loadgen_demo") {
  sources = [ "demo.cc" ]
  deps = [ ":mlperf_loadgen" ]
}

copy("public_headers_src") {
  sources = public_headers
  outputs = [ get_path_info(".", "gen_dir") + "/{{source_file_part}}" ]
}

copy("lib_src") {
  sources = lib_sources
  outputs = [ get_path_info(".", "gen_dir") + "/{{source_file_part}}" ]
}

copy("c_api_src") {
  sources = c_api_sources
  outputs = [ get_path_info(".", "gen_dir") + "/bindings/{{source_file_part}}" ]
}

copy("python_api_src") {
  sources = [ "bindings/python_api.cc" ]
  outputs = [ get_path_info(".", "gen_dir") + "/bindings/{{source_file_part}}" ]
}

# An attempt to create python module without using setuptools.
# TODO(brianderson): Remove or fix this.
# This compiles with the system toolchain, but not chromium's.
# For now, use loadgen_pymodule_setup_src/lib.py instead.
loadable_module("mlperf_loadgen_pymodule_lib") {
  sources = [ "bindings/python_api.cc" ]
  deps = [ ":mlperf_loadgen", "../third_party:pybind11" ]
  configs += [ "//build/config/compiler:rtti",
               "//build/config/compiler:exceptions",
               "../third_party:pybind11_include", ]
  cflags = [ "-Wno-macro-redefined" ]
  include_dirs = [ "." ] + py_include_dirs
  ldflags = py_ld_flags
}
